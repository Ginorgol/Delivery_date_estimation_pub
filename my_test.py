import pytest

warehouse_id={
	0:"Mumbai",
	1:"Banglore",
	2:"Hyderabad",
	3:"Chennai",
	4:"Ahmedabad",
	5:"Jaipur",
	6:"Gurugram",
	7:"Pune",
	8:"Delhi",
	9:"Kolkata"
}

default_distances=[

{(0,0):0,(0,1):984,(0,2):710,(0,3):1338,(0,4):531,(0,5):1153,(0,6):1383,(0,7):150,(0,8):1421,(0,9):2050},

{(1,0):981,(1,1):0,(1,2):570,(1,3):347,(1,4):1493,(1,5):2116,(1,6):2128,(1,7):837,(1,8):2179,(1,9):1857},

{(2,0):710,(2,1):576,(2,2):0,(2,3):638,(2,4):1220,(2,5):1558,(2,6):1537,(2,7):562,(2,8):1588,(2,9):1489},

{(3,0):1340,(3,1):348,(3,2):627,(3,3):0,(3,4):1843,(3,5):2182,(3,6):2160,(3,7):1191,(3,8):2211,(3,9):1670},

{(4,0):524,(4,1):1495,(4,2):1221,(4,3):1849,(4,4):0,(4,5):677,(4,6):907,(4,7):660,(4,8):945,(4,9):2087},

{(5,0):1148,(5,1):2004,(5,2):1554,(5,3):2180,(5,4):679,(5,5):0,(5,6):235,(5,7):1184,(5,8):272,(5,9):1511},

{(6,0):1376,(6,1):2144,(6,2):1551,(6,3):2178,(6,4):907,(6,5):242,(6,6):0,(6,7):1412,(6,8):42,(6,9):1496},

{(7,0):150,(7,1):842,(7,2):562,(7,3):1195,(7,4):663,(7,5):1182,(7,6):1413,(7,7):0,(7,8):1451,(7,9):2061},

{(8,0):1456,(8,1):2178,(8,2):1585,(8,3):2216,(8,4):947,(8,5):281,(8,6):43,(8,7):1452,(8,8):0,(8,9):1491},

{(9,0):2056,(9,1):1859,(9,2):1493,(9,3):1674,(9,4):2089,(9,5):1512,(9,6):1496,(9,7):1956,(9,8):1492,(9,9):0}

]


default_time=[
{(0,0):0:,(0,1):16,(0,2):13,(0,3):22,(0,4):9,(0,5):19,(0,6):23,(0,7):3,(0,8):24,(0,9):39},

{(1,0):16,(1,1):0,(1,2):9,(1,3):7,(1,4):24,(1,5):34,(1,6):35,(1,7):13,(1,8)35,(1,9):35},

{(2,0):14,(2,1):9,(2,2):0,(2,3):11,(2,4):22,(2,5):27,(2,6):27,(2,7):11,(2,8):27,(2,9):27},

{(3,0):22,(3,1):7,(3,2):11,(3,3):0,(3,4):30,(3,5):37,(3,6):37,(3,7):20,(3,8):37,(3,9):30},

{(4,0):9,(4,1):24,(4,2):22,(4,3):30,(4,4):0,(4,5):11,(4,6):15,(4,7):12,(4,8):16,(4,9):37},

{(5,0):19,(5,1):34,(5,2):27,(5,3):37,(5,4):11,(5,5):0,(5,6):4,(5,7):22,(5,8):5,(5,9):27},

{(6,0):23,(6,1):35,(6,2):27,(6,3):36,(6,4):15,(6,5):4,(6,6):0,(6,7):25,(6,8):2,(6,9):26},

{(7,0):3,(7,1):14,(7,2):11,(7,3):20,(7,4):11,(7,5):22,(7,6):25,(7,7):0,(7,8):26,(7,9):37},

{(8,0):24,(8,1):35,(8,2):27,(8,3):37,(8,4):16,(8,5):5,(8,6):1,(8,7):26,(8,8):0,(8,9):26},

{(9,0):39,(9,1):35,(9,2):28,(9,3):31,(9,4):36,(9,5):27,(9,6):26,(9,7):37,(9,8):26,(9,9):0}

]
@pytest.fixture
def distance_validity_using_googlemaps(distances_graph):
	for source in distances_graph:
		for destination in distances_graph:
			assert(abs(distances_graph[source][destination][1]-default_distances[(source,destination)]) < 100)
			assert(abs(distances_graph[source][destination][1]-default_distances[(source,destination)]) < 100)


@pytest.fixture
def time_validity_using_googlemaps(time_graph):
	for source in time_graph:
		for destination in time_graph:
			assert(abs(time_graph[source][destination][1]-default_time[(source,destination)]) < 10)
			assert(abs(time_graph[source][destination][1]-default_time[(source,destination)]) < 10)



